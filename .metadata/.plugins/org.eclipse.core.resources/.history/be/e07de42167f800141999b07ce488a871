package bingo;

import java.util.ArrayList;
import java.util.Collections;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Random;
import java.util.Set;

import bingo.interfaces.Caller;

public class RandomCaller implements Caller {

	private static final Random RANDOM = new Random();
	
	private LinkedList<Integer> notCalled = new LinkedList<Integer>();
	private Set<Integer> called = new HashSet<Integer>();
	
	public RandomCaller() {
		for (int i = Letter.B.rangeStart(); i < Letter.O.rangeEnd(); i++) {
			notCalled.add(i);
		}
		Collections.shuffle(notCalled);
	}
	
	@Override
	public int nextNumber() {
		notCalled
		return Letter.B.rangeStart() + RANDOM.nextInt(Letter.O.rangeEnd() - Letter.B.rangeStart());
	}

}
